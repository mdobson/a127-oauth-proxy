swagger: 2.0
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
  - application/x-www-form-urlencoded
# format of the responses to the client (Accepts)
produces:
  - application/json
x-a127-config:
  apigeeProxyKey: &apigeeProxyKey 1AhUDyALNPK4xgOoKtrjFWysLVB3cvVf
  apigeeProxyUri: &apigeeProxyUri http://dobson-test.apigee.net/apigee-remote-proxy
x-volos-resources:
  oauth2:
    provider: volos-oauth-apigee
    options:
      key: *apigeeProxyKey
      uri: *apigeeProxyUri
      validGrantTypes:
        - client_credentials
        - authorization_code
        - implicit_grant
        - password
      passwordCheck:
        helper: volos
        function: passwordCheck
      tokenPaths:
        authorize: /authorize
        token: /accessToken
        invalidate: /invalidate
        refresh: /refresh
  quota:
    provider: volos-quota-memory
    options:
      timeUnit: minute
      interval: 1
      allow: 2

paths:
  /:
    x-swagger-router-controller: zetta
    x-volos-authorizations:
      oauth2: {}
    x-volos-apply:
      quota: {}
    get:
      description: Returns root Zetta API
      operationId: zetta
      responses: 
        "200":
          description: Success
          schema: {}
        default:
          description: Error
          schema:
            $ref: ErrorResponse
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    x-volos-authorizations: {}
    x-volos-apply:
      quota: {}
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: HelloWorldResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: ErrorResponse
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
